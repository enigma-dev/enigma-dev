# fetch repository as zip archive
shallow_clone: true
# disable automatic tests
test: off
# don't build "feature" branches
skip_branch_with_pr: true
#bash -ilc "export TERM=ansi; set TERM=ansi; cd $APPVEYOR_BUILD_FOLDER; make -j 4 emake"
init:
  - echo "%APPVEYOR_JOB_ID%"
  - ps: |
      $apiURL = "https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG"
      $env:CACHE_JOB = (Invoke-RestMethod -Method Get -Uri $apiURL).build.jobs[0].jobId
  - echo "%CACHE_JOB%"
  - cd %APPVEYOR_BUILD_FOLDER%
environment:
  OUTPUT: /tmp/test.exe
  matrix:
  #BEGIN WINDOWS
    # Game Modes
    - {COMPILER: gcc, PLATFORM: Win32, MODE: Run, GRAPHICS: Direct3D9, AUDIO: None, COLLISION: None, NETWORK: None, WIDGETS: None, EXTENSIONS: "None"}
    - {COMPILER: gcc, PLATFORM: Win32, MODE: Debug, GRAPHICS: Direct3D9, AUDIO: None, COLLISION: None, NETWORK: None, WIDGETS: None, EXTENSIONS: "None"}
    - {COMPILER: gcc, PLATFORM: Win32, MODE: Compile, GRAPHICS: Direct3D9, AUDIO: None, COLLISION: None, NETWORK: None, WIDGETS: None, EXTENSIONS: "None"}
    # Graphics
    - {COMPILER: gcc, PLATFORM: Win32, MODE: Debug, GRAPHICS: Direct3D11, AUDIO: None, COLLISION: None, NETWORK: None, WIDGETS: None, EXTENSIONS: "None"}
    # Audio
    - {COMPILER: gcc, PLATFORM: Win32, MODE: Debug, GRAPHICS: Direct3D9, AUDIO: DirectSound, COLLISION: None, NETWORK: None, WIDGETS: None, EXTENSIONS: "None"}
    # Widgets
    - {COMPILER: gcc, PLATFORM: Win32, MODE: Debug, GRAPHICS: Direct3D9, AUDIO: None, COLLISION: None, NETWORK: None, WIDGETS: Win32, EXTENSIONS: "None"}
    # Extensions
    - {COMPILER: gcc, PLATFORM: Win32, MODE: Debug, GRAPHICS: Direct3D9, AUDIO: None, COLLISION: None, NETWORK: None, WIDGETS: None, EXTENSIONS: "DirectShow"}
    - {COMPILER: gcc, PLATFORM: Win32, MODE: Debug, GRAPHICS: Direct3D9, AUDIO: None, COLLISION: None, NETWORK: None, WIDGETS: None, EXTENSIONS: "WindowsTouch"}
    - {COMPILER: gcc, PLATFORM: Win32, MODE: Debug, GRAPHICS: Direct3D9, AUDIO: None, COLLISION: None, NETWORK: None, WIDGETS: None, EXTENSIONS: "XInput"}
    - {COMPILER: gcc, PLATFORM: Win32, MODE: Debug, GRAPHICS: Direct3D9, AUDIO: None, COLLISION: None, NETWORK: None, WIDGETS: None, EXTENSIONS: "MediaControlInterface"}
  #END WINDOWS
install:
  - set PATH=c:\msys64;C:\msys64\mingw64\bin;c:\msys64\usr\local\bin;c:\msys64\usr\bin;%PATH%
  - set MSYSTEM=MINGW64
  - set MSYSTEM_PREFIX=/mingw64
  - set MSYSTEM_CHOST=x86_64-w64-mingw32
  - set CONFIG_SITE=/mingw64/etc/config.site
  - set MINGW_PACKAGE_PREFIX=mingw-w64-x86_64
  - set MINGW_PREFIX=/mingw64
  - set MINGW_CHOST=x86_64-w64-mingw32
  - set PKG_CONFIG_PATH=/mingw64/lib/pkgconfig:/mingw64/share/pkgconfig
  #- setx TERM ansi
  #- setx GCC_COLORS 'error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
  - >
    pacman --noconfirm -S mingw-w64-x86_64-boost mingw-w64-x86_64-openal mingw-w64-x86_64-dumb mingw-w64-x86_64-libvorbis
    mingw-w64-x86_64-libogg mingw-w64-x86_64-flac mingw-w64-x86_64-mpg123 mingw-w64-x86_64-libsndfile mingw-w64-x86_64-libgme
    mingw-w64-x86_64-sfml mingw-w64-x86_64-gtk2 mingw-w64-x86_64-box2d mingw-w64-x86_64-bullet
  - gcc -v
  - ps: |
      If ($env:APPVEYOR_JOB_NUMBER -eq 1) {
        # use our first job to build JDI and the CLI
        bash -lc "cd $APPVEYOR_BUILD_FOLDER;make -j 4 2>&1;make -j 4 emake 2>&1"

        # create a daemon job to zip and upload the blobs artifact while we start building the engine
        $archive = {
          Set-Location $using:PWD
          7z a blobs.zip compileEGMf.dll emake.exe
          appveyor PushArtifact blobs.zip -Type Zip
        }
        $daemon = Start-Job -ScriptBlock $archive

        # register a callback so we can output the result of the archive when the daemon completes
        $jobEvent = Register-ObjectEvent $daemon StateChanged -Action {
          $result = Receive-Job -Job $daemon
          Write-Host ('Archive daemon has completed.') -foregroundcolor "Magenta"
          Write-Host ($result | Out-String) -foregroundcolor "Gray"
        }
      } Else {
        # simply restore the archive from the first job of this same build using REST API
        $blobsURL = https://ci.appveyor.com/api/buildjobs/$env:CACHE_JOB/artifacts/blobs.zip
        appveyor DownloadFile $blobsURL -FileName blobs.zip
        dir
        7z x blobs.zip
      }
build_script:
  # AppVeyor overrides %PLATFORM% because it's part of its API, so export it
  - bash -lc "cd $APPVEYOR_BUILD_FOLDER; export PLATFORM=%PLATFORM%; ./ci-build.sh 2>&1"
