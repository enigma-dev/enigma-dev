syntax = "proto2";
package buffers.resources;

import "options.proto";

message Argument {
  enum Kind {
    ARG_EXPRESSION = 0;
    ARG_STRING = 1;
    ARG_BOTH = 2;
    ARG_BOOLEAN = 3;
    ARG_MENU = 4;
    ARG_COLOR = 13;
    ARG_FONTSTRING = 15;
    ARG_SPRITE = 5;
    ARG_SOUND = 6;
    ARG_BACKGROUND = 7;
    ARG_PATH = 8;
    ARG_SCRIPT = 9;
    ARG_GMOBJECT = 10;
    ARG_ROOM = 11;
    ARG_FONT = 12;
    ARG_TIMELINE = 14;
  }

  optional Kind kind = 1;
  optional string string = 2;
}

message Action {
  enum Kind {
    ACT_NORMAL = 0;
    ACT_BEGIN = 1;
    ACT_END = 2;
    ACT_ELSE = 3;
    ACT_EXIT = 4;
    ACT_REPEAT = 5;
    ACT_VARIABLE = 6;
    ACT_CODE = 7;
    ACT_PLACEHOLDER = 8;
    ACT_SEPARATOR = 9;
    ACT_LABEL = 10;
  }

  enum Execution {
    EXEC_NONE = 0;
    EXEC_FUNCTION = 1;
    EXEC_CODE = 2;
  }

  optional int32 libid = 1;
  optional int32 id = 2;
  optional Kind kind = 3;
  optional bool use_relative = 4 [(gmx) = "userelative"];
  optional bool is_question = 5 [(gmx) = "isquestion"];
  optional bool use_apply_to = 6 [(gmx) = "useapplyto"];
  optional Execution exe_type = 7 [(gmx) = "exetype"];
  optional string function_name = 8 [(gmx) = "functionname"];
  optional string code_string = 9 [(gmx) = "codestring"];
  optional string who_name = 10 [(gmx) = "whoName"];
  optional bool relative = 11;
  optional bool is_not = 12 [(gmx) = "isnot"];
  repeated Argument arguments = 13 [(gmx) = "arguments/argument"];
}

message Event {
  optional int32 type = 1 [(gmx) = "eventtype"];
  optional int32 number = 2 [(gmx) = "enumb"];
  optional string name = 3 [(gmx) = "ename"];
  repeated Action action = 4;
}
