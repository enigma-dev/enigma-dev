syntax = "proto2";
package buffers.resources;

import "options.proto";

message Room {
  optional int32 id = 29 [(gmx) = "GMX_DEPRECATED"];

  optional string caption = 1;
  optional uint32 width = 2;
  optional uint32 height = 3;
  optional uint32 snap_x = 4 [(gmx) = "hsnap"];
  optional uint32 snap_y = 5 [(gmx) = "vsnap"];
  optional bool isometric = 6;
  optional uint32 speed = 27;
  optional bool persistent = 7;
  optional int32 color = 8 [(gmx) = "colour"];
  optional bool show_color = 9 [(gmx) = "showcolour"];
  optional string code = 10;
  optional bool enable_views = 11 [(gmx) = "enableViews"];
  optional bool clear_view_background = 12 [(gmx) = "clearViewBackground"];
  optional bool clear_display_buffer = 13 [(gmx) = "clearDisplayBuffer"];

  message Background {
    optional bool visible = 1;
    optional bool foreground = 2;
    optional string background_name = 3 [(gmx) = "name"];
    optional int32 x = 4;
    optional int32 y = 5;
    optional bool htiled = 6;
    optional bool vtiled = 7;
    optional double hspeed = 8;
    optional double vspeed = 9;
    optional bool stretch = 10;
  }

  repeated Background backgrounds = 15 [(gmx) = "backgrounds/background"];

  message View {
    optional bool visible = 1;
    optional int32 xview = 2;
    optional int32 yview = 3;
    optional uint32 wview = 4;
    optional uint32 hview = 5;
    optional int32 xport = 6;
    optional int32 yport = 7;
    optional uint32 wport = 8;
    optional uint32 hport = 9;
    optional int32 hborder = 10;
    optional int32 vborder = 11;
    optional double hspeed = 12;
    optional double vspeed = 13;
    optional string object_following = 14 [(gmx) = "objName"];
  }

  repeated View views = 16 [(gmx) = "views/view"];

  message Instance {
    optional string name = 1;
    optional int32 id = 2 [(id_start) = 100000];
    optional string object_type = 3 [(gmx) = "objName"];
    optional int32 x = 4;
    optional int32 y = 5;
    optional bool locked = 6;
    optional string code = 7;
    optional double xscale = 8 [(gmx) = "scaleX"];
    optional double yscale = 9 [(gmx) = "scaleY"];
    optional int32 color = 10 [(gmx) = "colour"];
    optional double rotation = 11;
  }

  repeated Instance instances = 17 [(gmx) = "instances/instance"];

  message Tile {
    optional string name = 1;
    optional int32 id = 2 [(id_start) = 10000000];
    optional string background_name = 3 [(gmx) = "bgName"];
    optional int32 x = 4;
    optional int32 y = 5;
    optional bool locked = 6;
    optional int32 xoffset = 7 [(gmx) = "xo"];
    optional int32 yoffset = 8 [(gmx) = "yo"];
    optional uint32 width = 9 [(gmx) = "w"];
    optional uint32 height = 10 [(gmx) = "h"];
    optional int32 depth = 11;
    optional double xscale = 12 [(gmx) = "scaleX"];
    optional double yscale = 13 [(gmx) = "scaleY"];
    optional int32 color = 14 [(gmx) = "colour"];
  }

  repeated Tile tiles = 18 [(gmx) = "tiles/tile"];

  message RoomPhysicsSettings {
    optional bool use_physics = 19 [(gmx) = "PhysicsWorld"];
    optional int32 phy_world_top = 20 [(gmx) = "PhysicsWorldTop"];
    optional int32 phy_world_left = 21 [(gmx) = "PhysicsWorldLeft"];
    optional int32 phy_world_right = 22 [(gmx) = "PhysicsWorldRight"];
    optional int32 phy_world_bottom = 23 [(gmx) = "PhysicsWorldBottom"];
    optional double phy_world_xgravity = 24 [(gmx) = "PhysicsWorldGravityX"];
    optional double phy_world_ygravity = 25 [(gmx) = "PhysicsWorldGravityY"];
    optional double phy_world_pixel_meters = 26 [(gmx) = "PhysicsWorldPixToMeters"];
  }

  optional RoomPhysicsSettings physics_settings = 19 [(gmx) = "EGM_NESTED"];

}
