syntax = "proto2";
package buffers;

import "game.proto";

service Compiler {
  rpc CompileBuffer (CompileRequest) returns (stream CompileReply);
  rpc GetResources (Empty) returns (stream Resource);

  rpc SyntaxCheck(SyntaxCheckRequest) returns (SyntaxError);
  rpc SetDefinitions(SetDefinitionsRequest) returns (SyntaxError);

  rpc Teardown (Empty) returns (Empty);
}

message Empty {
}

message Resource {
  optional string name = 1;
  optional bool is_function = 2;
  optional int32 arg_count_min = 3;
  optional int32 arg_count_max = 4;
  optional int32 overload_count = 5;
  optional int32 is_type_name = 6;
  optional int32 is_global = 7;
  optional bool is_end = 8;
  repeated string parameters = 9;
}

enum CompileMode {
  RUN = 1;
  DEBUG = 2;
  DESIGN = 3;
  COMPILE = 4;
  REBUILD = 5;
  INVALID = 6;
}

message CompileRequest {
  optional Game game = 1;
  optional string name = 2;
  optional CompileMode mode = 3;
}

message CompileReply {
  optional string message = 1;
  optional int32 progress = 2;
}

message SyntaxError {
  optional string message = 1; ///< The text associated with the error.
  optional int32 line = 2; ///< The line number on which the error occurred.
  optional int32 position = 3; ///< The column number in the line at which the error occurred.
  optional int32 absolute_index = 4; ///< The zero-based position in the entire code at which the error occurred.
}

message SetDefinitionsRequest {
  optional string code = 1;
  optional string yaml = 2;
}

message SyntaxCheckRequest {
  optional string code = 1;
  optional int32 script_count = 2;
  repeated string script_names = 3;
}
