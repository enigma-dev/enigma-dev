/********************************************************************************\
**                                                                              **
**  Copyright (C) 2008 Josh Ventura                                             **
**                                                                              **
**  This file is a part of the ENIGMA Development Environment.                  **
**                                                                              **
**                                                                              **
**  ENIGMA is free software: you can redistribute it and/or modify it under the **
**  terms of the GNU General Public License as published by the Free Software   **
**  Foundation, version 3 of the license or any later version.                  **
**                                                                              **
**  This application and its source code is distributed AS-IS, WITHOUT ANY      **
**  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   **
**  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more       **
**  details.                                                                    **
**                                                                              **
**  You should have recieved a copy of the GNU General Public License along     **
**  with this code. If not, see <http://www.gnu.org/licenses/>                  **
**                                                                              **
**  ENIGMA is an environment designed to create games and other programs with a **
**  high-level, fully compilable language. Developers of ENIGMA or anything     **
**  associated with ENIGMA are in no way responsible for its users or           **
**  applications created by its users, or damages caused by the environment     **
**  or programs made in the environment.                                        **
**                                                                              **
\********************************************************************************/

//This file was generated by the ENIGMA Development Environment.
//Editing it is a sign of a certain medical condition. We're not sure which one.

namespace enigma {
const char *resource_file_path="C:/Windows/Temp/stigma.res";
}
namespace enigma_user {
  enum {  // object names

    obj_splash_screen = 0,
    obj_title_logo = 1,
    obj_copyright = 2,
    obj_love = 3,
    obj_door_top = 4,
    obj_door_bottom = 5,
    obj_doorknob = 6,
    obj_doorway_ver = 7,
    obj_doorway_hor = 8,
    obj_doorway_corner_left = 9,
    obj_doorway_corner_right = 10,
    obj_doorway_bottom = 11,
    obj_background_shark = 12,
    obj_controller = 13,
    obj_background = 14,
    obj_character = 15,
    obj_charlittle = 16,
    obj_char_win = 17,
    obj_char_lose = 18,
    obj_charlittle_die = 19,
    obj_baddie_parent = 20,
    obj_land_parent = 21,
    obj_water_parent = 22,
    obj_key = 23,
    obj_door = 24,
    obj_sparkle = 25,
    obj_sparklittle = 26,
    obj_ladder = 27,
    obj_water_outline = 28,
    obj_water_top = 29,
    obj_water_base = 30,
    obj_paused = 31,
    obj_brick = 32,
    obj_brick_hor = 33,
    obj_brick_ver = 34,
    obj_brick_mid = 35,
    obj_baddie_destroy_acid = 36,
    obj_baddie_acid_leak = 37,
    obj_baddie_acid_drop = 38,
    obj_baddie_acid_man = 39,
    obj_baddie_spikes_up = 40,
    obj_baddie_spikes_down = 41,
    obj_baddie_barrier = 42,
    obj_wood = 43,
    obj_wood_hor = 44,
    obj_wood_ver = 45,
    obj_wood_mid = 46,
    obj_baddie_destroy_trap = 47,
    obj_baddie_trap_up_gen = 48,
    obj_baddie_trap_down_gen = 49,
    obj_baddie_trap_left_gen = 50,
    obj_baddie_trap_right_gen = 51,
    obj_baddie_trap_up = 52,
    obj_baddie_trap_down = 53,
    obj_baddie_trap_left = 54,
    obj_baddie_trap_right = 55,
    obj_window = 56,
    obj_coral = 57,
    obj_coral_hor = 58,
    obj_coral_ver = 59,
    obj_coral_mid = 60,
    obj_baddie_shark = 61,
    obj_rock = 62,
    obj_rock_hor = 63,
    obj_rock_ver = 64,
    obj_rock_mid = 65,
    obj_rock_hor_large = 66,
    obj_rock_ver_large = 67,
    obj_rock_mid_large = 68,
    obj_rock_mid_large_hor = 69,
    obj_rock_mid_large_ver = 70,
    obj_baddie_buzz_saw_1 = 71,
    obj_baddie_buzz_saw_2 = 72,
    obj_baddie_buzz_saw_3 = 73,
    obj_baddie_buzz_saw_4 = 74,
    obj_baddie_buzz_saw_5 = 75,
    obj_baddie_buzz_saw_6 = 76,
    obj_baddie_spike_ball_small_left = 77,
    obj_baddie_spike_ball_small_right = 78,
    obj_baddie_spike_ball_large_left = 79,
    obj_baddie_spike_ball_large_right = 80,
    obj_baddie_fire = 81,
    obj_baddie_lava = 82,
    obj_baddie_fire_ball_short = 83,
    obj_baddie_fire_ball_tall = 84,
    obj_game_win = 85,
    obj_game_lose = 86,
  };

  string object_get_name(int i) {
    switch (i) {
      case 0: return "obj_splash_screen";
      case 1: return "obj_title_logo";
      case 2: return "obj_copyright";
      case 3: return "obj_love";
      case 4: return "obj_door_top";
      case 5: return "obj_door_bottom";
      case 6: return "obj_doorknob";
      case 7: return "obj_doorway_ver";
      case 8: return "obj_doorway_hor";
      case 9: return "obj_doorway_corner_left";
      case 10: return "obj_doorway_corner_right";
      case 11: return "obj_doorway_bottom";
      case 12: return "obj_background_shark";
      case 13: return "obj_controller";
      case 14: return "obj_background";
      case 15: return "obj_character";
      case 16: return "obj_charlittle";
      case 17: return "obj_char_win";
      case 18: return "obj_char_lose";
      case 19: return "obj_charlittle_die";
      case 20: return "obj_baddie_parent";
      case 21: return "obj_land_parent";
      case 22: return "obj_water_parent";
      case 23: return "obj_key";
      case 24: return "obj_door";
      case 25: return "obj_sparkle";
      case 26: return "obj_sparklittle";
      case 27: return "obj_ladder";
      case 28: return "obj_water_outline";
      case 29: return "obj_water_top";
      case 30: return "obj_water_base";
      case 31: return "obj_paused";
      case 32: return "obj_brick";
      case 33: return "obj_brick_hor";
      case 34: return "obj_brick_ver";
      case 35: return "obj_brick_mid";
      case 36: return "obj_baddie_destroy_acid";
      case 37: return "obj_baddie_acid_leak";
      case 38: return "obj_baddie_acid_drop";
      case 39: return "obj_baddie_acid_man";
      case 40: return "obj_baddie_spikes_up";
      case 41: return "obj_baddie_spikes_down";
      case 42: return "obj_baddie_barrier";
      case 43: return "obj_wood";
      case 44: return "obj_wood_hor";
      case 45: return "obj_wood_ver";
      case 46: return "obj_wood_mid";
      case 47: return "obj_baddie_destroy_trap";
      case 48: return "obj_baddie_trap_up_gen";
      case 49: return "obj_baddie_trap_down_gen";
      case 50: return "obj_baddie_trap_left_gen";
      case 51: return "obj_baddie_trap_right_gen";
      case 52: return "obj_baddie_trap_up";
      case 53: return "obj_baddie_trap_down";
      case 54: return "obj_baddie_trap_left";
      case 55: return "obj_baddie_trap_right";
      case 56: return "obj_window";
      case 57: return "obj_coral";
      case 58: return "obj_coral_hor";
      case 59: return "obj_coral_ver";
      case 60: return "obj_coral_mid";
      case 61: return "obj_baddie_shark";
      case 62: return "obj_rock";
      case 63: return "obj_rock_hor";
      case 64: return "obj_rock_ver";
      case 65: return "obj_rock_mid";
      case 66: return "obj_rock_hor_large";
      case 67: return "obj_rock_ver_large";
      case 68: return "obj_rock_mid_large";
      case 69: return "obj_rock_mid_large_hor";
      case 70: return "obj_rock_mid_large_ver";
      case 71: return "obj_baddie_buzz_saw_1";
      case 72: return "obj_baddie_buzz_saw_2";
      case 73: return "obj_baddie_buzz_saw_3";
      case 74: return "obj_baddie_buzz_saw_4";
      case 75: return "obj_baddie_buzz_saw_5";
      case 76: return "obj_baddie_buzz_saw_6";
      case 77: return "obj_baddie_spike_ball_small_left";
      case 78: return "obj_baddie_spike_ball_small_right";
      case 79: return "obj_baddie_spike_ball_large_left";
      case 80: return "obj_baddie_spike_ball_large_right";
      case 81: return "obj_baddie_fire";
      case 82: return "obj_baddie_lava";
      case 83: return "obj_baddie_fire_ball_short";
      case 84: return "obj_baddie_fire_ball_tall";
      case 85: return "obj_game_win";
      case 86: return "obj_game_lose";
      default: return "<undefined>";
    }
  }
}
namespace enigma { size_t object_idmax = 87; }

namespace enigma_user {
  enum {  // sprite names

    spr_splash_screen = 0,
    spr_title_logo = 1,
    spr_copyright = 2,
    spr_love = 3,
    spr_door_top = 4,
    spr_door_bottom = 5,
    spr_doorknob = 6,
    spr_doorway_ver = 7,
    spr_doorway_hor = 8,
    spr_doorway_corner_left = 9,
    spr_doorway_corner_right = 10,
    spr_doorway_bottom = 11,
    spr_background_shark = 12,
    spr_icon = 13,
    spr_char_walk = 14,
    spr_char_small = 15,
    spr_char_climb = 16,
    spr_key = 17,
    spr_door = 18,
    spr_sparkle = 19,
    spr_ladder = 20,
    spr_water_outline = 21,
    spr_water_top = 22,
    spr_water_base = 23,
    spr_zone_1 = 24,
    spr_zone_2 = 25,
    spr_zone_3 = 26,
    spr_zone_4 = 27,
    spr_paused = 28,
    spr_brick = 29,
    spr_brick_hor = 30,
    spr_brick_ver = 31,
    spr_brick_mid = 32,
    spr_baddie_acid_leak = 33,
    spr_baddie_acid_drop = 34,
    spr_baddie_acid_man = 35,
    spr_baddie_spikes_up = 36,
    spr_baddie_spikes_down = 37,
    spr_baddie_barrier = 38,
    spr_wood = 39,
    spr_wood_hor = 40,
    spr_wood_ver = 41,
    spr_wood_mid = 42,
    spr_baddie_trap_up_gen = 43,
    spr_baddie_trap_down_gen = 44,
    spr_baddie_trap_left_gen = 45,
    spr_baddie_trap_right_gen = 46,
    spr_baddie_trap_up = 47,
    spr_baddie_trap_down = 48,
    spr_baddie_trap_left = 49,
    spr_baddie_trap_right = 50,
    spr_window = 51,
    spr_coral = 52,
    spr_coral_hor = 53,
    spr_coral_ver = 54,
    spr_coral_mid = 55,
    spr_baddie_shark = 56,
    spr_rock = 57,
    spr_rock_hor = 58,
    spr_rock_ver = 59,
    spr_rock_mid = 60,
    spr_rock_hor_large = 61,
    spr_rock_ver_large = 62,
    spr_rock_mid_large = 63,
    spr_rock_mid_large_hor = 64,
    spr_rock_mid_large_ver = 65,
    spr_baddie_buzz_saw = 66,
    spr_baddie_spike_ball_small_right = 67,
    spr_baddie_spike_ball_small_left = 68,
    spr_baddie_spike_ball_large_right = 69,
    spr_baddie_spike_ball_large_left = 70,
    spr_baddie_fire = 71,
    spr_baddie_lava = 72,
    spr_baddie_fire_ball = 73,
    spr_game_win = 74,
    spr_game_lose = 75,
  };

  string sprite_get_name(int i) {
    switch (i) {
      case 0: return "spr_splash_screen";
      case 1: return "spr_title_logo";
      case 2: return "spr_copyright";
      case 3: return "spr_love";
      case 4: return "spr_door_top";
      case 5: return "spr_door_bottom";
      case 6: return "spr_doorknob";
      case 7: return "spr_doorway_ver";
      case 8: return "spr_doorway_hor";
      case 9: return "spr_doorway_corner_left";
      case 10: return "spr_doorway_corner_right";
      case 11: return "spr_doorway_bottom";
      case 12: return "spr_background_shark";
      case 13: return "spr_icon";
      case 14: return "spr_char_walk";
      case 15: return "spr_char_small";
      case 16: return "spr_char_climb";
      case 17: return "spr_key";
      case 18: return "spr_door";
      case 19: return "spr_sparkle";
      case 20: return "spr_ladder";
      case 21: return "spr_water_outline";
      case 22: return "spr_water_top";
      case 23: return "spr_water_base";
      case 24: return "spr_zone_1";
      case 25: return "spr_zone_2";
      case 26: return "spr_zone_3";
      case 27: return "spr_zone_4";
      case 28: return "spr_paused";
      case 29: return "spr_brick";
      case 30: return "spr_brick_hor";
      case 31: return "spr_brick_ver";
      case 32: return "spr_brick_mid";
      case 33: return "spr_baddie_acid_leak";
      case 34: return "spr_baddie_acid_drop";
      case 35: return "spr_baddie_acid_man";
      case 36: return "spr_baddie_spikes_up";
      case 37: return "spr_baddie_spikes_down";
      case 38: return "spr_baddie_barrier";
      case 39: return "spr_wood";
      case 40: return "spr_wood_hor";
      case 41: return "spr_wood_ver";
      case 42: return "spr_wood_mid";
      case 43: return "spr_baddie_trap_up_gen";
      case 44: return "spr_baddie_trap_down_gen";
      case 45: return "spr_baddie_trap_left_gen";
      case 46: return "spr_baddie_trap_right_gen";
      case 47: return "spr_baddie_trap_up";
      case 48: return "spr_baddie_trap_down";
      case 49: return "spr_baddie_trap_left";
      case 50: return "spr_baddie_trap_right";
      case 51: return "spr_window";
      case 52: return "spr_coral";
      case 53: return "spr_coral_hor";
      case 54: return "spr_coral_ver";
      case 55: return "spr_coral_mid";
      case 56: return "spr_baddie_shark";
      case 57: return "spr_rock";
      case 58: return "spr_rock_hor";
      case 59: return "spr_rock_ver";
      case 60: return "spr_rock_mid";
      case 61: return "spr_rock_hor_large";
      case 62: return "spr_rock_ver_large";
      case 63: return "spr_rock_mid_large";
      case 64: return "spr_rock_mid_large_hor";
      case 65: return "spr_rock_mid_large_ver";
      case 66: return "spr_baddie_buzz_saw";
      case 67: return "spr_baddie_spike_ball_small_right";
      case 68: return "spr_baddie_spike_ball_small_left";
      case 69: return "spr_baddie_spike_ball_large_right";
      case 70: return "spr_baddie_spike_ball_large_left";
      case 71: return "spr_baddie_fire";
      case 72: return "spr_baddie_lava";
      case 73: return "spr_baddie_fire_ball";
      case 74: return "spr_game_win";
      case 75: return "spr_game_lose";
      default: return "<undefined>";
    }
  }
}
namespace enigma { size_t sprite_idmax = 76; }

namespace enigma_user {
  enum {  // background names

  };

  string background_get_name(int i) {
    switch (i) {
      default: return "<undefined>";
    }
  }
}
namespace enigma { size_t background_idmax = 0; }

namespace enigma_user {
  enum {  // font names

    EnigmaDefault = -1,
  };

  string font_get_name(int i) {
    switch (i) {
      case -1: return "EnigmaDefault";
      default: return "<undefined>";
    }
  }
}
namespace enigma { size_t font_idmax = 0; }

namespace enigma_user {
  enum {  // timeline names

  };

  string timeline_get_name(int i) {
    switch (i) {
      default: return "<undefined>";
    }
  }
}
namespace enigma { size_t timeline_idmax = 0; }

namespace enigma_user {
  enum {  // path names

    pth_baddie_buzz_saw_1 = 0,
    pth_baddie_buzz_saw_2 = 1,
    pth_baddie_buzz_saw_3 = 2,
    pth_baddie_buzz_saw_4 = 3,
    pth_baddie_buzz_saw_5 = 4,
    pth_baddie_buzz_saw_6 = 5,
    pth_baddie_trap_up = 6,
    pth_baddie_trap_down = 7,
  };

  string path_get_name(int i) {
    switch (i) {
      case 0: return "pth_baddie_buzz_saw_1";
      case 1: return "pth_baddie_buzz_saw_2";
      case 2: return "pth_baddie_buzz_saw_3";
      case 3: return "pth_baddie_buzz_saw_4";
      case 4: return "pth_baddie_buzz_saw_5";
      case 5: return "pth_baddie_buzz_saw_6";
      case 6: return "pth_baddie_trap_up";
      case 7: return "pth_baddie_trap_down";
      default: return "<undefined>";
    }
  }
}
namespace enigma { size_t path_idmax = 8; }

namespace enigma_user {
  enum {  // sound names

    snd_theme_0 = 0,
    snd_theme_1 = 1,
    snd_theme_2 = 2,
    snd_theme_3 = 3,
    snd_theme_4 = 4,
    snd_jump = 5,
    snd_key = 6,
    snd_door = 7,
    snd_die = 8,
  };

  string sound_get_name(int i) {
    switch (i) {
      case 0: return "snd_theme_0";
      case 1: return "snd_theme_1";
      case 2: return "snd_theme_2";
      case 3: return "snd_theme_3";
      case 4: return "snd_theme_4";
      case 5: return "snd_jump";
      case 6: return "snd_key";
      case 7: return "snd_door";
      case 8: return "snd_die";
      default: return "<undefined>";
    }
  }
}
namespace enigma { size_t sound_idmax = 9; }

namespace enigma_user {
  enum {  // script names

    create_views = 0,
  };

  string script_get_name(int i) {
    switch (i) {
      case 0: return "create_views";
      default: return "<undefined>";
    }
  }
}
namespace enigma { size_t script_idmax = 1; }

namespace enigma_user {
  enum {  // shader names

  };

  string shader_get_name(int i) {
    switch (i) {
      default: return "<undefined>";
    }
  }
}
namespace enigma { size_t shader_idmax = 0; }

namespace enigma_user {
  enum {  // room names

    rm_init_game = 0,
    rm_splash_screen = 1,
    rm_title_screen = 2,
    rm_level_1 = 3,
    rm_level_2 = 4,
    rm_level_3 = 5,
    rm_level_4 = 6,
    rm_level_5 = 7,
    rm_level_6 = 8,
    rm_level_7 = 9,
    rm_level_8 = 10,
    rm_level_9 = 11,
  };

}
namespace enigma { size_t room_idmax = 12; }

#include "AssetEnum.h"
namespace enigma {

std::map<enigma_user::AssetType, std::map<std::string, int>> assetMap = {

{ enigma_user::asset_object,
  {
    { "obj_splash_screen", 0 },
    { "obj_title_logo", 1 },
    { "obj_copyright", 2 },
    { "obj_love", 3 },
    { "obj_door_top", 4 },
    { "obj_door_bottom", 5 },
    { "obj_doorknob", 6 },
    { "obj_doorway_ver", 7 },
    { "obj_doorway_hor", 8 },
    { "obj_doorway_corner_left", 9 },
    { "obj_doorway_corner_right", 10 },
    { "obj_doorway_bottom", 11 },
    { "obj_background_shark", 12 },
    { "obj_controller", 13 },
    { "obj_background", 14 },
    { "obj_character", 15 },
    { "obj_charlittle", 16 },
    { "obj_char_win", 17 },
    { "obj_char_lose", 18 },
    { "obj_charlittle_die", 19 },
    { "obj_baddie_parent", 20 },
    { "obj_land_parent", 21 },
    { "obj_water_parent", 22 },
    { "obj_key", 23 },
    { "obj_door", 24 },
    { "obj_sparkle", 25 },
    { "obj_sparklittle", 26 },
    { "obj_ladder", 27 },
    { "obj_water_outline", 28 },
    { "obj_water_top", 29 },
    { "obj_water_base", 30 },
    { "obj_paused", 31 },
    { "obj_brick", 32 },
    { "obj_brick_hor", 33 },
    { "obj_brick_ver", 34 },
    { "obj_brick_mid", 35 },
    { "obj_baddie_destroy_acid", 36 },
    { "obj_baddie_acid_leak", 37 },
    { "obj_baddie_acid_drop", 38 },
    { "obj_baddie_acid_man", 39 },
    { "obj_baddie_spikes_up", 40 },
    { "obj_baddie_spikes_down", 41 },
    { "obj_baddie_barrier", 42 },
    { "obj_wood", 43 },
    { "obj_wood_hor", 44 },
    { "obj_wood_ver", 45 },
    { "obj_wood_mid", 46 },
    { "obj_baddie_destroy_trap", 47 },
    { "obj_baddie_trap_up_gen", 48 },
    { "obj_baddie_trap_down_gen", 49 },
    { "obj_baddie_trap_left_gen", 50 },
    { "obj_baddie_trap_right_gen", 51 },
    { "obj_baddie_trap_up", 52 },
    { "obj_baddie_trap_down", 53 },
    { "obj_baddie_trap_left", 54 },
    { "obj_baddie_trap_right", 55 },
    { "obj_window", 56 },
    { "obj_coral", 57 },
    { "obj_coral_hor", 58 },
    { "obj_coral_ver", 59 },
    { "obj_coral_mid", 60 },
    { "obj_baddie_shark", 61 },
    { "obj_rock", 62 },
    { "obj_rock_hor", 63 },
    { "obj_rock_ver", 64 },
    { "obj_rock_mid", 65 },
    { "obj_rock_hor_large", 66 },
    { "obj_rock_ver_large", 67 },
    { "obj_rock_mid_large", 68 },
    { "obj_rock_mid_large_hor", 69 },
    { "obj_rock_mid_large_ver", 70 },
    { "obj_baddie_buzz_saw_1", 71 },
    { "obj_baddie_buzz_saw_2", 72 },
    { "obj_baddie_buzz_saw_3", 73 },
    { "obj_baddie_buzz_saw_4", 74 },
    { "obj_baddie_buzz_saw_5", 75 },
    { "obj_baddie_buzz_saw_6", 76 },
    { "obj_baddie_spike_ball_small_left", 77 },
    { "obj_baddie_spike_ball_small_right", 78 },
    { "obj_baddie_spike_ball_large_left", 79 },
    { "obj_baddie_spike_ball_large_right", 80 },
    { "obj_baddie_fire", 81 },
    { "obj_baddie_lava", 82 },
    { "obj_baddie_fire_ball_short", 83 },
    { "obj_baddie_fire_ball_tall", 84 },
    { "obj_game_win", 85 },
    { "obj_game_lose", 86 }
  }
},

{ enigma_user::asset_sprite,
  {
    { "spr_splash_screen", 0 },
    { "spr_title_logo", 1 },
    { "spr_copyright", 2 },
    { "spr_love", 3 },
    { "spr_door_top", 4 },
    { "spr_door_bottom", 5 },
    { "spr_doorknob", 6 },
    { "spr_doorway_ver", 7 },
    { "spr_doorway_hor", 8 },
    { "spr_doorway_corner_left", 9 },
    { "spr_doorway_corner_right", 10 },
    { "spr_doorway_bottom", 11 },
    { "spr_background_shark", 12 },
    { "spr_icon", 13 },
    { "spr_char_walk", 14 },
    { "spr_char_small", 15 },
    { "spr_char_climb", 16 },
    { "spr_key", 17 },
    { "spr_door", 18 },
    { "spr_sparkle", 19 },
    { "spr_ladder", 20 },
    { "spr_water_outline", 21 },
    { "spr_water_top", 22 },
    { "spr_water_base", 23 },
    { "spr_zone_1", 24 },
    { "spr_zone_2", 25 },
    { "spr_zone_3", 26 },
    { "spr_zone_4", 27 },
    { "spr_paused", 28 },
    { "spr_brick", 29 },
    { "spr_brick_hor", 30 },
    { "spr_brick_ver", 31 },
    { "spr_brick_mid", 32 },
    { "spr_baddie_acid_leak", 33 },
    { "spr_baddie_acid_drop", 34 },
    { "spr_baddie_acid_man", 35 },
    { "spr_baddie_spikes_up", 36 },
    { "spr_baddie_spikes_down", 37 },
    { "spr_baddie_barrier", 38 },
    { "spr_wood", 39 },
    { "spr_wood_hor", 40 },
    { "spr_wood_ver", 41 },
    { "spr_wood_mid", 42 },
    { "spr_baddie_trap_up_gen", 43 },
    { "spr_baddie_trap_down_gen", 44 },
    { "spr_baddie_trap_left_gen", 45 },
    { "spr_baddie_trap_right_gen", 46 },
    { "spr_baddie_trap_up", 47 },
    { "spr_baddie_trap_down", 48 },
    { "spr_baddie_trap_left", 49 },
    { "spr_baddie_trap_right", 50 },
    { "spr_window", 51 },
    { "spr_coral", 52 },
    { "spr_coral_hor", 53 },
    { "spr_coral_ver", 54 },
    { "spr_coral_mid", 55 },
    { "spr_baddie_shark", 56 },
    { "spr_rock", 57 },
    { "spr_rock_hor", 58 },
    { "spr_rock_ver", 59 },
    { "spr_rock_mid", 60 },
    { "spr_rock_hor_large", 61 },
    { "spr_rock_ver_large", 62 },
    { "spr_rock_mid_large", 63 },
    { "spr_rock_mid_large_hor", 64 },
    { "spr_rock_mid_large_ver", 65 },
    { "spr_baddie_buzz_saw", 66 },
    { "spr_baddie_spike_ball_small_right", 67 },
    { "spr_baddie_spike_ball_small_left", 68 },
    { "spr_baddie_spike_ball_large_right", 69 },
    { "spr_baddie_spike_ball_large_left", 70 },
    { "spr_baddie_fire", 71 },
    { "spr_baddie_lava", 72 },
    { "spr_baddie_fire_ball", 73 },
    { "spr_game_win", 74 },
    { "spr_game_lose", 75 }
  }
},

{ enigma_user::asset_background,
  {
  }
},

{ enigma_user::asset_font,
  {
    { "EnigmaDefault", -1 }
  }
},

{ enigma_user::asset_timeline,
  {
  }
},

{ enigma_user::asset_path,
  {
    { "pth_baddie_buzz_saw_1", 0 },
    { "pth_baddie_buzz_saw_2", 1 },
    { "pth_baddie_buzz_saw_3", 2 },
    { "pth_baddie_buzz_saw_4", 3 },
    { "pth_baddie_buzz_saw_5", 4 },
    { "pth_baddie_buzz_saw_6", 5 },
    { "pth_baddie_trap_up", 6 },
    { "pth_baddie_trap_down", 7 }
  }
},

{ enigma_user::asset_sound,
  {
    { "snd_theme_0", 0 },
    { "snd_theme_1", 1 },
    { "snd_theme_2", 2 },
    { "snd_theme_3", 3 },
    { "snd_theme_4", 4 },
    { "snd_jump", 5 },
    { "snd_key", 6 },
    { "snd_door", 7 },
    { "snd_die", 8 }
  }
},

{ enigma_user::asset_script,
  {
    { "create_views", 0 }
  }
},

{ enigma_user::asset_shader,
  {
  }
},

{ enigma_user::asset_room,
  {
    { "rm_init_game", 0 },
    { "rm_splash_screen", 1 },
    { "rm_title_screen", 2 },
    { "rm_level_1", 3 },
    { "rm_level_2", 4 },
    { "rm_level_3", 5 },
    { "rm_level_4", 6 },
    { "rm_level_5", 7 },
    { "rm_level_6", 8 },
    { "rm_level_7", 9 },
    { "rm_level_8", 10 },
    { "rm_level_9", 11 }
  }
}
};


}
