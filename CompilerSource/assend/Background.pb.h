// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Background.proto

#ifndef PROTOBUF_Background_2eproto__INCLUDED
#define PROTOBUF_Background_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Image.pb.h"
// @@protoc_insertion_point(includes)
class Background;
class BackgroundDefaultTypeInternal;
extern BackgroundDefaultTypeInternal _Background_default_instance_;

namespace protobuf_Background_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Background_2eproto

// ===================================================================

class Background : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Background) */ {
 public:
  Background();
  virtual ~Background();

  Background(const Background& from);

  inline Background& operator=(const Background& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Background(Background&& from) noexcept
    : Background() {
    *this = ::std::move(from);
  }

  inline Background& operator=(Background&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Background& default_instance();

  static inline const Background* internal_default_instance() {
    return reinterpret_cast<const Background*>(
               &_Background_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Background* other);
  friend void swap(Background& a, Background& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Background* New() const PROTOBUF_FINAL { return New(NULL); }

  Background* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Background& from);
  void MergeFrom(const Background& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Background* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .Image image = 13;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 13;
  const ::Image& image() const;
  ::Image* mutable_image();
  ::Image* release_image();
  void set_allocated_image(::Image* image);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // bool transparent = 3;
  void clear_transparent();
  static const int kTransparentFieldNumber = 3;
  bool transparent() const;
  void set_transparent(bool value);

  // bool smoothEdges = 4;
  void clear_smoothedges();
  static const int kSmoothEdgesFieldNumber = 4;
  bool smoothedges() const;
  void set_smoothedges(bool value);

  // bool preload = 5;
  void clear_preload();
  static const int kPreloadFieldNumber = 5;
  bool preload() const;
  void set_preload(bool value);

  // bool useAsTileset = 6;
  void clear_useastileset();
  static const int kUseAsTilesetFieldNumber = 6;
  bool useastileset() const;
  void set_useastileset(bool value);

  // int32 tileWidth = 7;
  void clear_tilewidth();
  static const int kTileWidthFieldNumber = 7;
  ::google::protobuf::int32 tilewidth() const;
  void set_tilewidth(::google::protobuf::int32 value);

  // int32 tileHeight = 8;
  void clear_tileheight();
  static const int kTileHeightFieldNumber = 8;
  ::google::protobuf::int32 tileheight() const;
  void set_tileheight(::google::protobuf::int32 value);

  // int32 hOffset = 9;
  void clear_hoffset();
  static const int kHOffsetFieldNumber = 9;
  ::google::protobuf::int32 hoffset() const;
  void set_hoffset(::google::protobuf::int32 value);

  // int32 vOffset = 10;
  void clear_voffset();
  static const int kVOffsetFieldNumber = 10;
  ::google::protobuf::int32 voffset() const;
  void set_voffset(::google::protobuf::int32 value);

  // int32 hSep = 11;
  void clear_hsep();
  static const int kHSepFieldNumber = 11;
  ::google::protobuf::int32 hsep() const;
  void set_hsep(::google::protobuf::int32 value);

  // int32 vSep = 12;
  void clear_vsep();
  static const int kVSepFieldNumber = 12;
  ::google::protobuf::int32 vsep() const;
  void set_vsep(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Background)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::Image* image_;
  ::google::protobuf::int32 id_;
  bool transparent_;
  bool smoothedges_;
  bool preload_;
  bool useastileset_;
  ::google::protobuf::int32 tilewidth_;
  ::google::protobuf::int32 tileheight_;
  ::google::protobuf::int32 hoffset_;
  ::google::protobuf::int32 voffset_;
  ::google::protobuf::int32 hsep_;
  ::google::protobuf::int32 vsep_;
  mutable int _cached_size_;
  friend struct protobuf_Background_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Background

// string name = 1;
inline void Background::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Background::name() const {
  // @@protoc_insertion_point(field_get:Background.name)
  return name_.GetNoArena();
}
inline void Background::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Background.name)
}
#if LANG_CXX11
inline void Background::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Background.name)
}
#endif
inline void Background::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Background.name)
}
inline void Background::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Background.name)
}
inline ::std::string* Background::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Background.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Background::release_name() {
  // @@protoc_insertion_point(field_release:Background.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Background::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Background.name)
}

// int32 id = 2;
inline void Background::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Background::id() const {
  // @@protoc_insertion_point(field_get:Background.id)
  return id_;
}
inline void Background::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Background.id)
}

// bool transparent = 3;
inline void Background::clear_transparent() {
  transparent_ = false;
}
inline bool Background::transparent() const {
  // @@protoc_insertion_point(field_get:Background.transparent)
  return transparent_;
}
inline void Background::set_transparent(bool value) {
  
  transparent_ = value;
  // @@protoc_insertion_point(field_set:Background.transparent)
}

// bool smoothEdges = 4;
inline void Background::clear_smoothedges() {
  smoothedges_ = false;
}
inline bool Background::smoothedges() const {
  // @@protoc_insertion_point(field_get:Background.smoothEdges)
  return smoothedges_;
}
inline void Background::set_smoothedges(bool value) {
  
  smoothedges_ = value;
  // @@protoc_insertion_point(field_set:Background.smoothEdges)
}

// bool preload = 5;
inline void Background::clear_preload() {
  preload_ = false;
}
inline bool Background::preload() const {
  // @@protoc_insertion_point(field_get:Background.preload)
  return preload_;
}
inline void Background::set_preload(bool value) {
  
  preload_ = value;
  // @@protoc_insertion_point(field_set:Background.preload)
}

// bool useAsTileset = 6;
inline void Background::clear_useastileset() {
  useastileset_ = false;
}
inline bool Background::useastileset() const {
  // @@protoc_insertion_point(field_get:Background.useAsTileset)
  return useastileset_;
}
inline void Background::set_useastileset(bool value) {
  
  useastileset_ = value;
  // @@protoc_insertion_point(field_set:Background.useAsTileset)
}

// int32 tileWidth = 7;
inline void Background::clear_tilewidth() {
  tilewidth_ = 0;
}
inline ::google::protobuf::int32 Background::tilewidth() const {
  // @@protoc_insertion_point(field_get:Background.tileWidth)
  return tilewidth_;
}
inline void Background::set_tilewidth(::google::protobuf::int32 value) {
  
  tilewidth_ = value;
  // @@protoc_insertion_point(field_set:Background.tileWidth)
}

// int32 tileHeight = 8;
inline void Background::clear_tileheight() {
  tileheight_ = 0;
}
inline ::google::protobuf::int32 Background::tileheight() const {
  // @@protoc_insertion_point(field_get:Background.tileHeight)
  return tileheight_;
}
inline void Background::set_tileheight(::google::protobuf::int32 value) {
  
  tileheight_ = value;
  // @@protoc_insertion_point(field_set:Background.tileHeight)
}

// int32 hOffset = 9;
inline void Background::clear_hoffset() {
  hoffset_ = 0;
}
inline ::google::protobuf::int32 Background::hoffset() const {
  // @@protoc_insertion_point(field_get:Background.hOffset)
  return hoffset_;
}
inline void Background::set_hoffset(::google::protobuf::int32 value) {
  
  hoffset_ = value;
  // @@protoc_insertion_point(field_set:Background.hOffset)
}

// int32 vOffset = 10;
inline void Background::clear_voffset() {
  voffset_ = 0;
}
inline ::google::protobuf::int32 Background::voffset() const {
  // @@protoc_insertion_point(field_get:Background.vOffset)
  return voffset_;
}
inline void Background::set_voffset(::google::protobuf::int32 value) {
  
  voffset_ = value;
  // @@protoc_insertion_point(field_set:Background.vOffset)
}

// int32 hSep = 11;
inline void Background::clear_hsep() {
  hsep_ = 0;
}
inline ::google::protobuf::int32 Background::hsep() const {
  // @@protoc_insertion_point(field_get:Background.hSep)
  return hsep_;
}
inline void Background::set_hsep(::google::protobuf::int32 value) {
  
  hsep_ = value;
  // @@protoc_insertion_point(field_set:Background.hSep)
}

// int32 vSep = 12;
inline void Background::clear_vsep() {
  vsep_ = 0;
}
inline ::google::protobuf::int32 Background::vsep() const {
  // @@protoc_insertion_point(field_get:Background.vSep)
  return vsep_;
}
inline void Background::set_vsep(::google::protobuf::int32 value) {
  
  vsep_ = value;
  // @@protoc_insertion_point(field_set:Background.vSep)
}

// .Image image = 13;
inline bool Background::has_image() const {
  return this != internal_default_instance() && image_ != NULL;
}
inline void Background::clear_image() {
  if (GetArenaNoVirtual() == NULL && image_ != NULL) delete image_;
  image_ = NULL;
}
inline const ::Image& Background::image() const {
  const ::Image* p = image_;
  // @@protoc_insertion_point(field_get:Background.image)
  return p != NULL ? *p : *reinterpret_cast<const ::Image*>(
      &::_Image_default_instance_);
}
inline ::Image* Background::mutable_image() {
  
  if (image_ == NULL) {
    image_ = new ::Image;
  }
  // @@protoc_insertion_point(field_mutable:Background.image)
  return image_;
}
inline ::Image* Background::release_image() {
  // @@protoc_insertion_point(field_release:Background.image)
  
  ::Image* temp = image_;
  image_ = NULL;
  return temp;
}
inline void Background::set_allocated_image(::Image* image) {
  delete image_;
  image_ = image;
  if (image) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Background.image)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Background_2eproto__INCLUDED
