#include <map>
#include <fstream>
using namespace std;

#include "settings-parse/eyaml.h"


char indent[4096] = { };
int print_recurse(ofstream &out, ey_data &x, int ind)
{
  for (eycit i = x.values_order.next; i and i->value; i = i->next)
  {
    indent[ind] = 0;
    out << indent << i->value->name << ":";
    indent[ind] = ' ';
    
    if (i->value->is_scalar)
    {
      string &val = ((ey_string*)i->value)->value;
      size_t lnp = val.find_first_of("\r\n");
      if (lnp == string::npos)
        out << " " << val << endl;
      else
      {
        out << " |" << endl;
        const int pind = ind + 2; indent[pind] = 0;
        for (size_t sp = 0; sp != string::npos; sp = lnp, lnp = val.find_first_of("\r\n", lnp + 1))
          out << indent << (lnp == string::npos ? val.substr(sp?sp+1:0) : val.substr(sp?sp+1:0, lnp-sp-!!sp)) << endl;
        indent[pind] = ' ';
      }
    }
    else
    {
      out << endl;
      print_recurse(out, *(ey_data*)i->value, ind+2);
    }
  }
  return 0;
}

int main()
{
  ifstream a("yaml.ey");
  ofstream b("out.ey");
  for (int i = 0; i < 4095; i++) indent[i] = ' ';
  b << "%eyaml\n--- Generated by the ENIGMA YAML parser.\n\n";
  if (a.is_open())
  {
    ey_data x = parse_eyaml(a,"yaml.ey");
    print_recurse(b,x,0);
  }
  return 0;
}
