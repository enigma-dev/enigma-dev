# competition for Thundercleese
notifications:
  irc: "chat.freenode.net#enigma"
# disable the depth option for git allowing us to merge multiple prs simultaneously
git:
  depth: false
# don't build "feature" branches
branches:
  only:
    - "master"

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo dpkg --add-architecture i386; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -qq -y install build-essential libglu1-mesa-dev zlib1g-dev libalure-dev libvorbisfile3 libvorbis-dev 
      libdumb1-dev libc++-dev libsfml-dev libgtk2.0-dev libbullet-dev libgme-dev gcc-multilib 
      g++-multilib libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1-dev libglu1-mesa:i386 libx11-6:i386  libc++-dev:i386
      mingw-w64 wine libboost-dev libboost-iostreams-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev; fi
  
  # Ubuntu is a turd
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo ln -s /usr/lib/i386-linux-gnu/mesa/libGL.so.1 /usr/lib/i386-linux-gnu/libGL.so; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo ln -s /usr/lib/i386-linux-gnu/libX11.so.6 /usr/lib/i386-linux-gnu/libX11.so; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo ln -s /usr/lib/i386-linux-gnu/libGLU.so.1 /usr/lib/i386-linux-gnu/libGLU.so; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo ln -s /usr/include/x86_64-linux-gnu/zconf.h /usr/include; fi
  
  #OSX is also a turd
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade gcc || brew install gcc || brew link --overwrite gcc; fi  

install:
  - chmod +x ./ci-build.sh
  - make -j4
  - make -j4 emake
  - curl -L https://github.com/fundies/enigma-libs/files/1347135/enigma-libs.zip > enigma-libs.zip
  - unzip enigma-libs.zip -d ENIGMAsystem/
  - mv ENIGMAsystem/Install ENIGMAsystem/Additional

# by default most of our jobs will be run on a linux instance
os: linux
dist: trusty
compiler: gcc
language: cpp

env:
  global:
    - OUTPUT=/tmp/test
  matrix:
    - COMPILER=gcc PLATFORM=xlib MODE=Run GRAPHICS=OpenGL1 AUDIO=None COLLISION=None NETWORK=None WIDGETS=None EXTENSIONS="None"
matrix:
  include:
    - os: linux
      dist: trusty
      env: { COMPILER: "gcc", PLATFORM: "xlib", MODE: "Debug", GRAPHICS: "OpenGL1", AUDIO: "None", COLLISION: "None", NETWORK: "None", WIDGETS: "None", EXTENSIONS: "Box2DPhysics" }
      install: sudo apt-get -qq -y install libbox2d-dev
script:
  - ./ci-build.sh
